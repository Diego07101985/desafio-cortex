name: Run Tests

on:
  push:
    branches:
      - '*'
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Cache pip
      uses: actions/cache@v2
      id: cache-venv
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip3 install --upgrade pip3
        pip3 install flake8 pytest
        if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
  

 
  # lint:
  #   runs-on: ubuntu-latest
  #   name: Lint with flake8
  #   needs: build
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       python-version: 3.8
  #     - name: Lint with flake8
  #       run: |
  #         # stop the build if there are Python syntax errors or undefined names
  #         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest  
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy 
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pytest: 
    name: Test 
    runs-on: ubuntu-latest 
     
    needs: sonarcloud
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Test with pytest
        run: FLASK_APP=autoapp flask test;
        # with:
        #   key: test-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
        #   path: |
        #     /.cache/pip
        #     ~/.cache/pip
        
